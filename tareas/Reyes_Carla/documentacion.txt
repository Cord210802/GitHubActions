1. Propósito del trabjo:

El propósito fue poner en práctica lo que en clase pudimos ver sobre los github actions. Estas tienen muchas 
funcionalidades, como la automatización de las pruebas, la automatización de la compilación y el despliegue,
la posibilidad de tener comentarios y notificaciones automáticas y mejorar las tareas de mantenimiento. En 
este caso, el trabajo consistió en que por nuestra cuenta buscaramos adentrarnos más a githubactions para hacer
nuestro propio yml y que entendiéramos el funcionamiento detrás de este y cómo se puede conectar con dockerhub.

2. ¿Cómo se ejecutan las pruebas localmente?
A partir de nuestro archivo yml se ejecutan las líneas, es decir se ejcutan los triggers y jobs. Estas se 
ejecutarán en a pestaña de actions en github.com, ahí podremos ver si se ejecutan de manera correcta. 

3. Configuración del workflow de GitHub Actions
El archivo yml utilizado para configurar flujos de trabajo de GitHub Actions sirve para definir las acciones 
automatizadas que deseas ejecutar en respuesta a eventos específicos en tu repositorio de GitHub. 
Este se compone del del nombre de nuestro workflow, triggers y jobs.
Aquí el mío

name: PruebaCarla

on:
  pull_request:
  push:
    paths:
      - 'tareas/Reyes_Carla/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Build Docker Image
      run: |
        docker build -t githubactions tareas/Reyes_Carla
    - name: Log in to Docker Hub
      run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Tag Docker Image
      run: docker tag githubactions ${{ secrets.DOCKERHUB_USERNAME }}/githubactions:latest
    - name: Push Docker Image to Docker Hub
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/githubactions:latest
    - name: Run Docker Container
      run: |
        docker run ${{ secrets.DOCKERHUB_USERNAME }}/githubactions > output.log
    - name: Print Docker Output
      run: |
        cat output.log

4. El link de tu docker hub con tu imagen creada con secrets
https://hub.docker.com/repository/docker/carlarhdz/githubactions/general 

5. Incluye cualquier información adicional que pueda ser útil para entender y ejecutar correctamente el proyecto.
   - El DOCKERHUB_TOKEN es el generado con dockerhub y utilizado en el repositorio   
   - El DOCKERHUB_USERNAME es el usuario del dockerhub

